import datetime
from sys import exit
import locale
locale.setlocale(locale.LC_TIME, "pl_PL")


days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]


def get_year(leap):
    year = input("Podaj rok: ")
    if year.isdigit():
        year = int(year)
        if int(year) >= 10000:
            print("Niestety obsługiwane są jedynie lata do 9999 roku, spróbuj jeszcze raz!")
            get_year(leap)
        else:
             if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0):
                print(year, "to rok przestępny")
                leap = True
             else:
                print(year, "to rok nieprzestępny")
                leap = False

        get_month(year, leap)

    else:
        print("Błędna wartość, spróbuj jeszcze raz!")
        get_year(leap)
    return year, leap


def get_month(year, leap):
    month = input("Podaj miesiąc lub wciśnij Enter, aby zakończyć: ")

    file1 = open("C:\\Users\\aleksandra.hercyk\Desktop\czas.txt", "w")
    if leap is True:
        line = [str(year), " to rok przestępny.\n"]
    else:
        line = [str(year), " to rok nieprzestępny.\n"]
    file1.writelines(line)

    if month == "":
        file1.close()
        exit()
    else:
        if month.isdigit() and 1 <= int(month) <= 12:
            # print("poprawny miesiąc")
            m = int(month)
            if leap is True and m == 2:
                print("Luty", year, "roku zawiera(ł) 29 dni.")
                file1.write("Luty " + str(year) + " roku zawiera(ł) 29 dni." + "\n")
            else:
                d = datetime.date(int(year), m, 1)
                print(d.strftime("%B").capitalize(), "zawiera ", days[m - 1], "dni.")
                file1.write(d.strftime("%B").capitalize() + " zawiera " + str(days[m - 1]) + " dni."+" \n")
            get_day(year, month, leap, file1)
        else:
            print("Błedna wartość, spróbuj jeszcze raz!")
            get_month(year, leap)

    return year, month, leap, file1


def get_day(year, month, leap, file1):
    day = input("Podaj dzień lub wciśnij Enter, aby zakończyć: ")

    if day == "":
        file1.close()
        exit()
    else:
        if day.isdigit() and int(day) >= 1 and (int(day) <= days[int(month)-1] or (int(month) == 2 and leap is True and int(day) == 29)):
            d = datetime.date(int(year), int(month), int(day))

            day_of_the_year = int(day)
            for i in range(int(month)-1):
                day_of_the_year = day_of_the_year + int(days[i])

            if leap is True and int(month) > 2:
                day_of_the_year = day_of_the_year + 1

            print(d.strftime("%d/%m/%Y"), "to", day_of_the_year, "dzień roku.")
            file1.write(d.strftime("%d/%m/%Y")+" to " + str(day_of_the_year) + " dzień roku."+"\n")
        else:
            print("Błędna wartość, spróbuj jeszcze raz!")
            get_day(year, month, leap, file1)
    file1.close()
    return day


get_year(True)
